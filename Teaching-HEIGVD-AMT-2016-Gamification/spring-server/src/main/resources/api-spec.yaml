swagger: '2.0'
info:
  version: 1.0.0
  title: Gamification Platform API
  description: |
   **This is the documentation of the AMT Gamification Platform API**
host: localhost:8080
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /badges:
    get:
      responses:
        200:
          description:  List all badges
          schema:
            title: Badges
            type: array
            items:
              $ref: '#/definitions/BadgeGet'
    post:
      parameters:
        - name: badge
          in: body
          description: The info required to create a badge
          schema:
            $ref: '#/definitions/BadgePost'
          required: true
        - name: token
          in: header
          type: string
          description: token
          required: true

      responses:
        201:
          description: Make a new badge
  /badges/{id}:
    get:
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: ID of the badge
          required: true
      responses:
        200:
          description: Sends the badge with badge Id
          schema:
            title: Badges
            type: object
            items:
              $ref: '#/definitions/BadgeGet'
    put:
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: id of the badge to modify
          required: true
        - name: badge
          in: body
          description: The new values for an existing badge
          schema:
            $ref: '#/definitions/BadgePost'
          required: true
      responses:
        200:
          description: Sends the modified bagdge Id
          schema:
            title: Badges
            type: object
            items:
              $ref: '#/definitions/BadgeGet'
    delete:
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: ID of the badge to delete
          required: true
      responses:
        200:
          description: Delete the badge with badge id
          
  /applications:
    get:
      responses:
        200:
          description:  List all applications
          schema:
            title: Applications
            type: array
            items:
              $ref: '#/definitions/ApplicationGet'
    post:
      parameters:
        - name: application
          in: body
          description: The info required to create an application
          schema:
            $ref: '#/definitions/ApplicationPost'
          required: true
      responses:
        201:
          description: Make a new application
          
  /applications/{id}:
    get:
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: id of the application
          required: true
      responses:
        200:
          description: Sends the application with application id
          schema:
            title: Applications
            type: object
            items:
              $ref: '#/definitions/ApplicationGet'
    put:
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: id of the application to modify
          required: true
        - name: application
          in: body
          description: The new values for an existing application
          schema:
            $ref: '#/definitions/ApplicationPost'
          required: true
      responses:
        200:
          description: Sends the modified application id
          schema:
            title: Applications
            type: object
            items:
              $ref: '#/definitions/ApplicationGet'
    delete:
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: id of the application to delete
          required: true
      responses:
        200:
          description: Delete the application with badge id
  
  /applications/{id}/{idBadge}:
    get:
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: id of the application
          required: true
        - name: idBadge
          in: path
          type: integer
          format: int64
          description: id of the badge
          required: true
      responses:
        200:
          description: Sends the detail of the badge with badge id of the application with application id
          schema:
            title: Badge
            type: object
            items:
              $ref: '#/definitions/BadgeGet'
          
  /login:
    post:
      parameters:
        - name: loginInfo
          in: body
          description: The info required to login with on application
          schema:
            $ref: '#/definitions/LoginPost'
          required: true
      responses:
        201:
          description: token
          schema:
            title: token
            type: object
            items:
              $ref: '#/definitions/LoginGet'

definitions:
  LoginGet:
    type: object
    properties:
      token:
        type: string

  
  LoginPost:
    type: object
    properties:
      name:
        type: string
      password:
        type: string


  BadgeGet:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      icon:
        type: string
        
  BadgePost:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      icon:
        type: string
        
  ApplicationGet:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      badgesList:
        type: array
        items:
          type: string
        
  ApplicationPost:
    type: object
    properties:
      name:
        type: string
      password:
        type: string
      description:
        type: string