swagger: '2.0'
info:
  version: 1.0.0
  title: Gamification Platform API
  description: |
    **This is the documentation of the AMT Gamification Platform API**
host: localhost:8090
basePath: /api
schemes:
  - http
  - https
paths:
  /applications:
    get:
      responses:
        200:
          description: List all applications
          schema:
            title: Applications
            type: array
            items:
              $ref: '#/definitions/ApplicationGet'
        404:
          description: Application not found
    post:
      parameters:
        - name: application
          in: body
          description: The info required to create an application
          schema:
            $ref: '#/definitions/ApplicationPost'
          required: true
      responses:
        201:
          description: Make a new applicationon
        409:
          description: Applications conflict
          
          
  /applications/{id}:
    get:
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: id of the application
          required: true
      responses:
        200:
          description: Sends the application with application id
          schema:
            title: Applications
            type: object
            items:
              $ref: '#/definitions/ApplicationGet'
            
        404:
          description: Application not found
          
    put:
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: id of the application to modify
          required: true
        - name: application
          in: body
          description: The new values for an existing application
          schema:
            $ref: '#/definitions/ApplicationPost'
          required: true
      responses:
        200:
          description: Sends the modified application id
          schema:
            title: Applications
            type: object
            items:
              $ref: '#/definitions/ApplicationGet'
        404:
          description: Application not found
        
    delete:
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: id of the application to delete
          required: true
      responses:
        200:
          description: Delete the application with badge id
        404:
          description: Application not foundßßßßß
   
          
          
  /auth:
    post:
      operationId: authenticateApplicationAndGetToken
      consumes:
      - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: The info required to authenticate an application
          schema:
            $ref: '#/definitions/Credentials'
          required: true
      responses:
        200:
          description: Authentication sucessful
          schema:
            $ref: '#/definitions/Token'
        401:
          description: Authentication failed
  /users/{id}:
    get:
      description:  Retrieve one user by id
      operationId: findUserById
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - name: id
          in: path
          description: id of the user to fetch
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description:
              Returns the specified user state
          schema:
            $ref: '#/definitions/User'   
  /events:
    post:
      description:  Report that a new event has happened in the gamified application
      operationId: reportEvent
      consumes:
      - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - name: event
          in: body
          description: The event that occured in the realm of the gamified application
          schema:
            $ref: '#/definitions/Event'
          required: true
      responses:
        202:
          description:
              The platform has accepted the event and will process it (asynchronously)
          schema:
            $ref: '#/definitions/Event'   

definitions: 
  RegistrationSummary:
    type: object
    properties:
      applicationName:
        type: string
 
  ApplicationPost:
    type: object
    properties:
      name:
        type: string
      password:
        type: string
      description:
        type: string
      id:
        type: integer
        format: int64
        
        
  ApplicationGet:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      badgesList:
        type: array
        items:
          type: string      
        
        
        
  Credentials:
    type: object
    properties:
      applicationName:
        type: string
      password:
        type: string
  Token:
    type: object
    properties:
      applicationName:
        type: string
  Event:
    type: object
    properties:
      type:
        type: string
      userId:
        type: string
      timestamp:
        type: string
        format: date-time
      properties:
        type: object
  User:
    type: object
    properties:
      userId:
        type: string
      numberOfEvents:
        type: integer
parameters: 
  TokenHeader:
    description: token that identifies the application sending the request
    name: X-Gamification-Token
    in: header
    required: true
    type: string